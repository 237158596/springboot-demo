<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.demo.dao.CxsCustomerEmpMapper" >
  <resultMap id="BaseResultMap" type="com.example.demo.dto.CxsCustomerEmp" >
    <result column="APPLY_CODE" property="applyCode" jdbcType="VARCHAR" />
    <result column="COMP_NAME" property="compName" jdbcType="VARCHAR" />
    <result column="POSITION" property="position" jdbcType="VARCHAR" />
    <result column="COMP_ADDR_PROVINCE" property="compAddrProvince" jdbcType="VARCHAR" />
    <result column="COMP_ADDR_CITY" property="compAddrCity" jdbcType="VARCHAR" />
    <result column="COMP_ADDR_DISTRICT" property="compAddrDistrict" jdbcType="VARCHAR" />
    <result column="COMP_DETAIL_ADDRESS" property="compDetailAddress" jdbcType="VARCHAR" />
    <result column="COMP_ADDRESS" property="compAddress" jdbcType="VARCHAR" />
    <result column="GSW_COMP_PHONE1" property="gswCompPhone1" jdbcType="VARCHAR" />
    <result column="GSW_COMP_PHONE2" property="gswCompPhone2" jdbcType="VARCHAR" />
    <result column="STANDBY_COMP_PHONE" property="standbyCompPhone" jdbcType="VARCHAR" />
    <result column="CREATED_TIME" property="createdTime" jdbcType="TIMESTAMP" />
    <result column="CREATED_USER_ID" property="createdUserId" jdbcType="VARCHAR" />
    <result column="CREATED_USER_NAME" property="createdUserName" jdbcType="VARCHAR" />
    <result column="UPDATED_TIME" property="updatedTime" jdbcType="TIMESTAMP" />
    <result column="UPDATED_USER_ID" property="updatedUserId" jdbcType="VARCHAR" />
    <result column="UPDATED_USER_NAME" property="updatedUserName" jdbcType="VARCHAR" />
    <result column="CC" property="cc" jdbcType="VARCHAR" />
    <result column="OC" property="oc" jdbcType="VARCHAR" />
    <result column="CC_DESC" property="ccDesc" jdbcType="VARCHAR" />
    <result column="OC_DESC" property="ocDesc" jdbcType="VARCHAR" />
    <result column="OCCUPATION_TYPE" property="occupationType" jdbcType="VARCHAR" />
    <result column="RECOMMEND_CC1" property="recommendCc1" jdbcType="VARCHAR" />
    <result column="RECOMMEND_CC1_DESC" property="recommendCc1Desc" jdbcType="VARCHAR" />
    <result column="RECOMMEND_CC2" property="recommendCc2" jdbcType="VARCHAR" />
    <result column="RECOMMEND_CC2_DESC" property="recommendCc2Desc" jdbcType="VARCHAR" />
    <result column="RECOMMEND_CC3" property="recommendCc3" jdbcType="VARCHAR" />
    <result column="RECOMMEND_CC3_DESC" property="recommendCc3Desc" jdbcType="VARCHAR" />
    <result column="COMP_PHONE" property="compPhone" jdbcType="VARCHAR" />
    <result column="REMARKS" property="remarks" jdbcType="VARCHAR" />
    <result column="DEPT" property="dept" jdbcType="VARCHAR" />
    <result column="COMP_PHONE_SUPPLEMENT" property="compPhoneSupplement" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    APPLY_CODE, COMP_NAME, POSITION, COMP_ADDR_PROVINCE, COMP_ADDR_CITY, COMP_ADDR_DISTRICT, 
    COMP_DETAIL_ADDRESS, COMP_ADDRESS, GSW_COMP_PHONE1, GSW_COMP_PHONE2, STANDBY_COMP_PHONE, 
    CREATED_TIME, CREATED_USER_ID, CREATED_USER_NAME, UPDATED_TIME, UPDATED_USER_ID, 
    UPDATED_USER_NAME, CC, OC, CC_DESC, OC_DESC, OCCUPATION_TYPE, RECOMMEND_CC1, RECOMMEND_CC1_DESC, 
    RECOMMEND_CC2, RECOMMEND_CC2_DESC, RECOMMEND_CC3, RECOMMEND_CC3_DESC, COMP_PHONE, 
    REMARKS, DEPT, COMP_PHONE_SUPPLEMENT
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.example.demo.dto.CxsCustomerEmpExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from CXS_CUSTOMER_EMP
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.example.demo.dto.CxsCustomerEmpExample" >
    delete from CXS_CUSTOMER_EMP
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.demo.dto.CxsCustomerEmp" >
    insert into CXS_CUSTOMER_EMP (APPLY_CODE, COMP_NAME, POSITION, 
      COMP_ADDR_PROVINCE, COMP_ADDR_CITY, COMP_ADDR_DISTRICT, 
      COMP_DETAIL_ADDRESS, COMP_ADDRESS, GSW_COMP_PHONE1, 
      GSW_COMP_PHONE2, STANDBY_COMP_PHONE, CREATED_TIME, 
      CREATED_USER_ID, CREATED_USER_NAME, UPDATED_TIME, 
      UPDATED_USER_ID, UPDATED_USER_NAME, CC, 
      OC, CC_DESC, OC_DESC, 
      OCCUPATION_TYPE, RECOMMEND_CC1, RECOMMEND_CC1_DESC, 
      RECOMMEND_CC2, RECOMMEND_CC2_DESC, RECOMMEND_CC3, 
      RECOMMEND_CC3_DESC, COMP_PHONE, REMARKS, 
      DEPT, COMP_PHONE_SUPPLEMENT)
    values (#{applyCode,jdbcType=VARCHAR}, #{compName,jdbcType=VARCHAR}, #{position,jdbcType=VARCHAR}, 
      #{compAddrProvince,jdbcType=VARCHAR}, #{compAddrCity,jdbcType=VARCHAR}, #{compAddrDistrict,jdbcType=VARCHAR}, 
      #{compDetailAddress,jdbcType=VARCHAR}, #{compAddress,jdbcType=VARCHAR}, #{gswCompPhone1,jdbcType=VARCHAR}, 
      #{gswCompPhone2,jdbcType=VARCHAR}, #{standbyCompPhone,jdbcType=VARCHAR}, #{createdTime,jdbcType=TIMESTAMP}, 
      #{createdUserId,jdbcType=VARCHAR}, #{createdUserName,jdbcType=VARCHAR}, #{updatedTime,jdbcType=TIMESTAMP}, 
      #{updatedUserId,jdbcType=VARCHAR}, #{updatedUserName,jdbcType=VARCHAR}, #{cc,jdbcType=VARCHAR}, 
      #{oc,jdbcType=VARCHAR}, #{ccDesc,jdbcType=VARCHAR}, #{ocDesc,jdbcType=VARCHAR}, 
      #{occupationType,jdbcType=VARCHAR}, #{recommendCc1,jdbcType=VARCHAR}, #{recommendCc1Desc,jdbcType=VARCHAR}, 
      #{recommendCc2,jdbcType=VARCHAR}, #{recommendCc2Desc,jdbcType=VARCHAR}, #{recommendCc3,jdbcType=VARCHAR}, 
      #{recommendCc3Desc,jdbcType=VARCHAR}, #{compPhone,jdbcType=VARCHAR}, #{remarks,jdbcType=VARCHAR}, 
      #{dept,jdbcType=VARCHAR}, #{compPhoneSupplement,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.example.demo.dto.CxsCustomerEmp" >
    insert into CXS_CUSTOMER_EMP
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="applyCode != null" >
        APPLY_CODE,
      </if>
      <if test="compName != null" >
        COMP_NAME,
      </if>
      <if test="position != null" >
        POSITION,
      </if>
      <if test="compAddrProvince != null" >
        COMP_ADDR_PROVINCE,
      </if>
      <if test="compAddrCity != null" >
        COMP_ADDR_CITY,
      </if>
      <if test="compAddrDistrict != null" >
        COMP_ADDR_DISTRICT,
      </if>
      <if test="compDetailAddress != null" >
        COMP_DETAIL_ADDRESS,
      </if>
      <if test="compAddress != null" >
        COMP_ADDRESS,
      </if>
      <if test="gswCompPhone1 != null" >
        GSW_COMP_PHONE1,
      </if>
      <if test="gswCompPhone2 != null" >
        GSW_COMP_PHONE2,
      </if>
      <if test="standbyCompPhone != null" >
        STANDBY_COMP_PHONE,
      </if>
      <if test="createdTime != null" >
        CREATED_TIME,
      </if>
      <if test="createdUserId != null" >
        CREATED_USER_ID,
      </if>
      <if test="createdUserName != null" >
        CREATED_USER_NAME,
      </if>
      <if test="updatedTime != null" >
        UPDATED_TIME,
      </if>
      <if test="updatedUserId != null" >
        UPDATED_USER_ID,
      </if>
      <if test="updatedUserName != null" >
        UPDATED_USER_NAME,
      </if>
      <if test="cc != null" >
        CC,
      </if>
      <if test="oc != null" >
        OC,
      </if>
      <if test="ccDesc != null" >
        CC_DESC,
      </if>
      <if test="ocDesc != null" >
        OC_DESC,
      </if>
      <if test="occupationType != null" >
        OCCUPATION_TYPE,
      </if>
      <if test="recommendCc1 != null" >
        RECOMMEND_CC1,
      </if>
      <if test="recommendCc1Desc != null" >
        RECOMMEND_CC1_DESC,
      </if>
      <if test="recommendCc2 != null" >
        RECOMMEND_CC2,
      </if>
      <if test="recommendCc2Desc != null" >
        RECOMMEND_CC2_DESC,
      </if>
      <if test="recommendCc3 != null" >
        RECOMMEND_CC3,
      </if>
      <if test="recommendCc3Desc != null" >
        RECOMMEND_CC3_DESC,
      </if>
      <if test="compPhone != null" >
        COMP_PHONE,
      </if>
      <if test="remarks != null" >
        REMARKS,
      </if>
      <if test="dept != null" >
        DEPT,
      </if>
      <if test="compPhoneSupplement != null" >
        COMP_PHONE_SUPPLEMENT,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="applyCode != null" >
        #{applyCode,jdbcType=VARCHAR},
      </if>
      <if test="compName != null" >
        #{compName,jdbcType=VARCHAR},
      </if>
      <if test="position != null" >
        #{position,jdbcType=VARCHAR},
      </if>
      <if test="compAddrProvince != null" >
        #{compAddrProvince,jdbcType=VARCHAR},
      </if>
      <if test="compAddrCity != null" >
        #{compAddrCity,jdbcType=VARCHAR},
      </if>
      <if test="compAddrDistrict != null" >
        #{compAddrDistrict,jdbcType=VARCHAR},
      </if>
      <if test="compDetailAddress != null" >
        #{compDetailAddress,jdbcType=VARCHAR},
      </if>
      <if test="compAddress != null" >
        #{compAddress,jdbcType=VARCHAR},
      </if>
      <if test="gswCompPhone1 != null" >
        #{gswCompPhone1,jdbcType=VARCHAR},
      </if>
      <if test="gswCompPhone2 != null" >
        #{gswCompPhone2,jdbcType=VARCHAR},
      </if>
      <if test="standbyCompPhone != null" >
        #{standbyCompPhone,jdbcType=VARCHAR},
      </if>
      <if test="createdTime != null" >
        #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createdUserId != null" >
        #{createdUserId,jdbcType=VARCHAR},
      </if>
      <if test="createdUserName != null" >
        #{createdUserName,jdbcType=VARCHAR},
      </if>
      <if test="updatedTime != null" >
        #{updatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedUserId != null" >
        #{updatedUserId,jdbcType=VARCHAR},
      </if>
      <if test="updatedUserName != null" >
        #{updatedUserName,jdbcType=VARCHAR},
      </if>
      <if test="cc != null" >
        #{cc,jdbcType=VARCHAR},
      </if>
      <if test="oc != null" >
        #{oc,jdbcType=VARCHAR},
      </if>
      <if test="ccDesc != null" >
        #{ccDesc,jdbcType=VARCHAR},
      </if>
      <if test="ocDesc != null" >
        #{ocDesc,jdbcType=VARCHAR},
      </if>
      <if test="occupationType != null" >
        #{occupationType,jdbcType=VARCHAR},
      </if>
      <if test="recommendCc1 != null" >
        #{recommendCc1,jdbcType=VARCHAR},
      </if>
      <if test="recommendCc1Desc != null" >
        #{recommendCc1Desc,jdbcType=VARCHAR},
      </if>
      <if test="recommendCc2 != null" >
        #{recommendCc2,jdbcType=VARCHAR},
      </if>
      <if test="recommendCc2Desc != null" >
        #{recommendCc2Desc,jdbcType=VARCHAR},
      </if>
      <if test="recommendCc3 != null" >
        #{recommendCc3,jdbcType=VARCHAR},
      </if>
      <if test="recommendCc3Desc != null" >
        #{recommendCc3Desc,jdbcType=VARCHAR},
      </if>
      <if test="compPhone != null" >
        #{compPhone,jdbcType=VARCHAR},
      </if>
      <if test="remarks != null" >
        #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="dept != null" >
        #{dept,jdbcType=VARCHAR},
      </if>
      <if test="compPhoneSupplement != null" >
        #{compPhoneSupplement,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.demo.dto.CxsCustomerEmpExample" resultType="java.lang.Integer" >
    select count(*) from CXS_CUSTOMER_EMP
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update CXS_CUSTOMER_EMP
    <set >
      <if test="record.applyCode != null" >
        APPLY_CODE = #{record.applyCode,jdbcType=VARCHAR},
      </if>
      <if test="record.compName != null" >
        COMP_NAME = #{record.compName,jdbcType=VARCHAR},
      </if>
      <if test="record.position != null" >
        POSITION = #{record.position,jdbcType=VARCHAR},
      </if>
      <if test="record.compAddrProvince != null" >
        COMP_ADDR_PROVINCE = #{record.compAddrProvince,jdbcType=VARCHAR},
      </if>
      <if test="record.compAddrCity != null" >
        COMP_ADDR_CITY = #{record.compAddrCity,jdbcType=VARCHAR},
      </if>
      <if test="record.compAddrDistrict != null" >
        COMP_ADDR_DISTRICT = #{record.compAddrDistrict,jdbcType=VARCHAR},
      </if>
      <if test="record.compDetailAddress != null" >
        COMP_DETAIL_ADDRESS = #{record.compDetailAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.compAddress != null" >
        COMP_ADDRESS = #{record.compAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.gswCompPhone1 != null" >
        GSW_COMP_PHONE1 = #{record.gswCompPhone1,jdbcType=VARCHAR},
      </if>
      <if test="record.gswCompPhone2 != null" >
        GSW_COMP_PHONE2 = #{record.gswCompPhone2,jdbcType=VARCHAR},
      </if>
      <if test="record.standbyCompPhone != null" >
        STANDBY_COMP_PHONE = #{record.standbyCompPhone,jdbcType=VARCHAR},
      </if>
      <if test="record.createdTime != null" >
        CREATED_TIME = #{record.createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createdUserId != null" >
        CREATED_USER_ID = #{record.createdUserId,jdbcType=VARCHAR},
      </if>
      <if test="record.createdUserName != null" >
        CREATED_USER_NAME = #{record.createdUserName,jdbcType=VARCHAR},
      </if>
      <if test="record.updatedTime != null" >
        UPDATED_TIME = #{record.updatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatedUserId != null" >
        UPDATED_USER_ID = #{record.updatedUserId,jdbcType=VARCHAR},
      </if>
      <if test="record.updatedUserName != null" >
        UPDATED_USER_NAME = #{record.updatedUserName,jdbcType=VARCHAR},
      </if>
      <if test="record.cc != null" >
        CC = #{record.cc,jdbcType=VARCHAR},
      </if>
      <if test="record.oc != null" >
        OC = #{record.oc,jdbcType=VARCHAR},
      </if>
      <if test="record.ccDesc != null" >
        CC_DESC = #{record.ccDesc,jdbcType=VARCHAR},
      </if>
      <if test="record.ocDesc != null" >
        OC_DESC = #{record.ocDesc,jdbcType=VARCHAR},
      </if>
      <if test="record.occupationType != null" >
        OCCUPATION_TYPE = #{record.occupationType,jdbcType=VARCHAR},
      </if>
      <if test="record.recommendCc1 != null" >
        RECOMMEND_CC1 = #{record.recommendCc1,jdbcType=VARCHAR},
      </if>
      <if test="record.recommendCc1Desc != null" >
        RECOMMEND_CC1_DESC = #{record.recommendCc1Desc,jdbcType=VARCHAR},
      </if>
      <if test="record.recommendCc2 != null" >
        RECOMMEND_CC2 = #{record.recommendCc2,jdbcType=VARCHAR},
      </if>
      <if test="record.recommendCc2Desc != null" >
        RECOMMEND_CC2_DESC = #{record.recommendCc2Desc,jdbcType=VARCHAR},
      </if>
      <if test="record.recommendCc3 != null" >
        RECOMMEND_CC3 = #{record.recommendCc3,jdbcType=VARCHAR},
      </if>
      <if test="record.recommendCc3Desc != null" >
        RECOMMEND_CC3_DESC = #{record.recommendCc3Desc,jdbcType=VARCHAR},
      </if>
      <if test="record.compPhone != null" >
        COMP_PHONE = #{record.compPhone,jdbcType=VARCHAR},
      </if>
      <if test="record.remarks != null" >
        REMARKS = #{record.remarks,jdbcType=VARCHAR},
      </if>
      <if test="record.dept != null" >
        DEPT = #{record.dept,jdbcType=VARCHAR},
      </if>
      <if test="record.compPhoneSupplement != null" >
        COMP_PHONE_SUPPLEMENT = #{record.compPhoneSupplement,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update CXS_CUSTOMER_EMP
    set APPLY_CODE = #{record.applyCode,jdbcType=VARCHAR},
      COMP_NAME = #{record.compName,jdbcType=VARCHAR},
      POSITION = #{record.position,jdbcType=VARCHAR},
      COMP_ADDR_PROVINCE = #{record.compAddrProvince,jdbcType=VARCHAR},
      COMP_ADDR_CITY = #{record.compAddrCity,jdbcType=VARCHAR},
      COMP_ADDR_DISTRICT = #{record.compAddrDistrict,jdbcType=VARCHAR},
      COMP_DETAIL_ADDRESS = #{record.compDetailAddress,jdbcType=VARCHAR},
      COMP_ADDRESS = #{record.compAddress,jdbcType=VARCHAR},
      GSW_COMP_PHONE1 = #{record.gswCompPhone1,jdbcType=VARCHAR},
      GSW_COMP_PHONE2 = #{record.gswCompPhone2,jdbcType=VARCHAR},
      STANDBY_COMP_PHONE = #{record.standbyCompPhone,jdbcType=VARCHAR},
      CREATED_TIME = #{record.createdTime,jdbcType=TIMESTAMP},
      CREATED_USER_ID = #{record.createdUserId,jdbcType=VARCHAR},
      CREATED_USER_NAME = #{record.createdUserName,jdbcType=VARCHAR},
      UPDATED_TIME = #{record.updatedTime,jdbcType=TIMESTAMP},
      UPDATED_USER_ID = #{record.updatedUserId,jdbcType=VARCHAR},
      UPDATED_USER_NAME = #{record.updatedUserName,jdbcType=VARCHAR},
      CC = #{record.cc,jdbcType=VARCHAR},
      OC = #{record.oc,jdbcType=VARCHAR},
      CC_DESC = #{record.ccDesc,jdbcType=VARCHAR},
      OC_DESC = #{record.ocDesc,jdbcType=VARCHAR},
      OCCUPATION_TYPE = #{record.occupationType,jdbcType=VARCHAR},
      RECOMMEND_CC1 = #{record.recommendCc1,jdbcType=VARCHAR},
      RECOMMEND_CC1_DESC = #{record.recommendCc1Desc,jdbcType=VARCHAR},
      RECOMMEND_CC2 = #{record.recommendCc2,jdbcType=VARCHAR},
      RECOMMEND_CC2_DESC = #{record.recommendCc2Desc,jdbcType=VARCHAR},
      RECOMMEND_CC3 = #{record.recommendCc3,jdbcType=VARCHAR},
      RECOMMEND_CC3_DESC = #{record.recommendCc3Desc,jdbcType=VARCHAR},
      COMP_PHONE = #{record.compPhone,jdbcType=VARCHAR},
      REMARKS = #{record.remarks,jdbcType=VARCHAR},
      DEPT = #{record.dept,jdbcType=VARCHAR},
      COMP_PHONE_SUPPLEMENT = #{record.compPhoneSupplement,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>